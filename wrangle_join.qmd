---
title: "Joining Data"
---

## Library Loading

Begin by loading any needed libraries

:::panel-tabset
## `r fontawesome::fa(name = "r-project", fill = "#FF9B00", a11y = "sem")` R

Load the `tidyverse` meta-package as well as our vertebrate data.

```{r r-start, warning = F, message = F}
# Load needed library
library(tidyverse)
```

## `r fontawesome::fa(name = "python", fill = "#077DC2", a11y = "sem")` Python

Load the Pandas library as well as our vertebrate data.

```{python py-libs}
# Load needed library
import pandas as pd
```
:::

## Combining DataFrames

Sometimes we collected related data and store them in separate files. If you have two datasets that are sampled at very different frequencies (e.g., annual temperature values and daily insect counts), trying to include both in a single file results in duplicating the less granular data _many_ times. This is not ideal. Fortunately, scripted languages provide several methods for combining data so that they can be used together despite being stored separately.

To illustrate some of these methods we'll load some new simulated data on lichen coverage to use instead of the vertebrate data we've used in past modules.

:::panel-tabset
## `r fontawesome::fa(name = "r-project", fill = "#FF9B00", a11y = "sem")` R

```{r r-data}
# Load data
vert_r <- read.csv(file = "data/verts.csv")

# Check out first few rows
head(vert_r, n = 5)
```

## `r fontawesome::fa(name = "python", fill = "#077DC2", a11y = "sem")` Python

```{python py-data}
# Load data
vert_py = pd.read_csv("data/verts.csv")

# Check out first few rows
vert_py.head()
```
:::

## `concat` & `cbind`/`rbind`



## Left / Right Joins



## Inner Joins



## Full Joins



