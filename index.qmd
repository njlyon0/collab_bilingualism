---
title: "Welcome!"
engine: knitr
---
 
I think of myself as a competent R coder but am a total novice when it comes to Python. This repository is my attempt at forcing myself to 'eat my vegetables' and gain basic competency in Python. I think trying for a 1-to-1 R translation to Python will be an effective learning method (at least to start) and enshrining it in a Quarto website will keep me rigorous about documenting my process.

## Package Installation

Both coding lanaguage rely on packages to install specific functions that are absent from the 'base' version of either R or Python. The following code chunks are not evaluated in the building of this website but you'll need to install these packages on your local machine (if you haven't already done so) in order to run the code in the rest of this translation tutorial.

:::panel-tabset
## `r fontawesome::fa(name = "r-project", fill = "#FF9B00", a11y = "sem")` R

R contains an `install.packages` function for installing packages from within R.

```{r r-pkg-install, eval = F}
# Install the 'tidyverse' meta-package
install.packages("tidyverse")
```

## `r fontawesome::fa(name = "python", fill = "#077DC2", a11y = "sem")` Python

Python packages must be installed via the <u>C</u>ommand <u>L</u>ine <u>I</u>nterface (a.k.a. CLI, or "bash").

```{bash py-pkg-install, eval = F}
# Install the following python packages
python3 -m pip install pandas
python3 -m pip install numpy
python3 -m pip install matplotlib
python3 -m pip install jupyterlab

## `plotnine` is `ggplot2` in python!
python3 -m pip install plotnine
```
:::

## Section Overviews

### Glossary

As the heading would suggest, I'm housing various term definitions here. As of now, it makes most sense to me to provide the definition for a concept and then give the term in `r fontawesome::fa(name = "python", fill = "#077DC2", a11y = "sem")` <span style="color:#077DC2">Python</span> & `r fontawesome::fa(name = "r-project", fill = "#FF9B00", a11y = "sem")` <span style="color:#FF9B00">R</span>. Note that I also give a more functional definition of major concepts in the code tutorial pages upon first mention.

### Fundamentals

When learning a new programming language, it can be really helpful to begin with dramatically simplified examples to demonstrate crucial concepts. Beginning in this way provides a strong foundation for extensions into more nuanced operations.

### Data Wrangling

The beating heart of my day-to-day work revolves around data 'wrangling'. I view 'wrangling' as any _scripted_ data manipulations between the very first raw data entered digitally and the data being ready for any analysis/visualization. This covers a huge swath of operations and should allow me to explore Python equivalents to many of the R operations that I know and love.

### Automation

Sometimes we want to repeat a given set of steps iteratively. While we _could_ simply copy/paste the relevant code once per needed iteration, this is cumbersome and error-prone. Instead we can use loops and "custom" functions (i.e., those we write ourselves rather than those that are installed from official libraries) to capture a repeated set of steps in a single location for re-use.

### Visualization

Somewhat self-explanatory but this section is all about data visualization! While visualization can be an effective quality control tool it is also useful in data exploration and--eventually--to generate publication- or report-quality graphics. This section attempts to cover the fundamentals of data "viz" in both languages but is by no means exhaustive!

## Contributing Guidelines

{{< include /collabs.qmd >}}

## Additional Resources

I'm not the first to have this idea so there are other useful Python tutorials and specifically R-Python bilingualism resources. See below:

- The Carpentries has a "[Data Analysis and Visualization in Python for Ecologists ](https://datacarpentry.org/python-ecology-lesson/index.html)" lesson that is really well put-together (as is characteristic of The Carpentries' content)
- The [Earth Lab](https://www.earthdatascience.org/) has a Python course that was recommended to me by an NCEAS employee (specifically [section 4](https://www.earthdatascience.org/courses/intro-to-earth-data-science/python-code-fundamentals/))
- The [EEOB-BioData](https://github.com/EEOB-BioData) faculty at [Iowa State University](https://www.iastate.edu/) offer a ["Computational Skills For Biological Data"](https://eeob-biodata.github.io/EEOB-BCB-546X/) course that covers R and Python (and Unix)
- Dr. Diba Mirza taught a UCSB Computer Science ([CS8](https://ucsb-cs8.github.io/w19-mirza/lectures_list/)) course on Python
- [ESIIL](https://esiil.org/) (<u>E</u>nvironmental Data <u>S</u>cience <u>I</u>nnovation and <u>I</u>nclusion <u>L</u>ab) has created [an R-Python bilingualism tutorial](https://cu-esiil.github.io/pre-innovation-summit-training/2_R_and_Py_bilingualism/code/outline/outline/) that is framed for a more applied audience
- [Marie Rivers](https://github.com/marierivers) also made [a website](https://marierivers.github.io/marie_quarto/) for exploring Quarto more generally that I've found super helpful for the part of it that deals with R/Python bilingualism
