{
  "hash": "7f2f23228cf9564c23edb6996e689f4f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Welcome!\"\nengine: knitr\n---\n\n\n\n\nI think of myself as a competent [{{< fa brands r-project >}} R]{.r} coder but am a total novice when it comes to [{{< fa brands python >}} Python]{.py}. This repository is my attempt at forcing myself to 'eat my vegetables' and gain basic competency in [{{< fa brands python >}} Python]{.py}. I think trying for a 1-to-1 [{{< fa brands r-project >}} R]{.r} translation to [{{< fa brands python >}} Python]{.py} will be an effective learning method (at least to start) and enshrining it in a Quarto website will keep me rigorous about documenting my process.\n\n## Package Installation\n\nBoth coding languages rely on packages to install specific functions that are absent from the 'base' version of either [{{< fa brands python >}} Python]{.py} or [{{< fa brands r-project >}} R]{.r}. The following code chunks are not evaluated in the building of this website but you'll need to install these packages on your local machine (if you haven't already done so) in order to run the code in the rest of this translation tutorial.\n\n:::panel-tabset\n## [{{< fa brands r-project >}} R]{.r}\n\n[{{< fa brands r-project >}} R]{.r} contains an `install.packages` function for installing packages desired libraries.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The 'tidyverse' meta-package contains many of the tools we'll need\ninstall.packages(\"tidyverse\")\n\n# For SQL operations, DBI is needed\ninstall.packages(\"DBI\")\n\n# For spatial operations we'll need sf and terra\ninstall.packages(\"sf\")\ninstall.packages(\"terra\")\n```\n:::\n\n\n\n\n## [{{< fa brands python >}} Python]{.py}\n\n[{{< fa brands python >}} Python]{.py} packages must be installed via the `<svg aria-label=\"Terminal\" role=\"img\" viewBox=\"0 0 576 512\" style=\"height:1em;width:1.12em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#EB6534;overflow:visible;position:relative;\"><title>Terminal</title><path d=\"M9.4 86.6C-3.1 74.1-3.1 53.9 9.4 41.4s32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L178.7 256 9.4 86.6zM256 416H544c17.7 0 32 14.3 32 32s-14.3 32-32 32H256c-17.7 0-32-14.3-32-32s14.3-32 32-32z\"/></svg>`{=html} [command line]{.cli}.\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# The numpy and pandas packages contain fundamental Python tools\npython3 -m pip install pandas\npython3 -m pip install numpy\n\n# For plotting we'll want some other packages\npython3 -m pip install matplotlib\npython3 -m pip install plotnine\n## plotnine is Python's ggplot2\n\n# For SQL operations we'll need the sqlite3 package\npython3 -m pip install sqlite3\n\n# For spatial operations we'll need a few packages\npython3 -m pip install geopandas\npython3 -m pip install rasterio\npython3 -m pip install rioxarray\n```\n:::\n\n\n\n:::\n\n## Section Overviews\n\n\n### Fundamentals\n\nWhen learning a new programming language, it can be really helpful to begin with dramatically simplified examples to demonstrate crucial concepts. We can also build upon really core concepts into more nuanced fundamentals like automation or [string]{.py}/[character]{.r} methods.\n\n### Data Wrangling\n\nThe beating heart of my day-to-day work revolves around data 'wrangling'. I view 'wrangling' as any _scripted_ data manipulations between the very first raw data entered digitally and the data being ready for any analysis/visualization. This covers a huge swath of operations and should allow me to explore [{{< fa brands python >}} Python]{.py} equivalents to many of the [{{< fa brands r-project >}} R]{.r} operations that I know and love.\n\n### Visualization\n\nSomewhat self-explanatory but this section is all about data visualization! While visualization can be an effective quality control tool it is also useful in data exploration and--eventually--to generate publication- or report-quality graphics. This section attempts to cover the fundamentals of data \"viz\" in both languages but is by no means exhaustive!\n\n### SQL\n\n`<svg aria-label=\"Database\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#283E82;overflow:visible;position:relative;\"><title>Database</title><path d=\"M448 80v48c0 44.2-100.3 80-224 80S0 172.2 0 128V80C0 35.8 100.3 0 224 0S448 35.8 448 80zM393.2 214.7c20.8-7.4 39.9-16.9 54.8-28.6V288c0 44.2-100.3 80-224 80S0 332.2 0 288V186.1c14.9 11.8 34 21.2 54.8 28.6C99.7 230.7 159.5 240 224 240s124.3-9.3 169.2-25.3zM0 346.1c14.9 11.8 34 21.2 54.8 28.6C99.7 390.7 159.5 400 224 400s124.3-9.3 169.2-25.3c20.8-7.4 39.9-16.9 54.8-28.6V432c0 44.2-100.3 80-224 80S0 476.2 0 432V346.1z\"/></svg>`{=html} [SQL]{.sql} is a powerful programming language in its own right that is intended to work with relational databases. Relational databases include several data tables of various sizes/structures that share some common 'index' columns that allow them to be combined as needed. Both [{{< fa brands python >}} Python]{.py} and [{{< fa brands r-project >}} R]{.r} allow users to access these databases using `<svg aria-label=\"Database\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#283E82;overflow:visible;position:relative;\"><title>Database</title><path d=\"M448 80v48c0 44.2-100.3 80-224 80S0 172.2 0 128V80C0 35.8 100.3 0 224 0S448 35.8 448 80zM393.2 214.7c20.8-7.4 39.9-16.9 54.8-28.6V288c0 44.2-100.3 80-224 80S0 332.2 0 288V186.1c14.9 11.8 34 21.2 54.8 28.6C99.7 230.7 159.5 240 224 240s124.3-9.3 169.2-25.3zM0 346.1c14.9 11.8 34 21.2 54.8 28.6C99.7 390.7 159.5 400 224 400s124.3-9.3 169.2-25.3c20.8-7.4 39.9-16.9 54.8-28.6V432c0 44.2-100.3 80-224 80S0 476.2 0 432V346.1z\"/></svg>`{=html} [SQL]{.sql} syntax while still living in their preferred coding language. This section highlights some of the major considerations when working with databases through either language though it is _not_ a tutorial on `<svg aria-label=\"Database\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#283E82;overflow:visible;position:relative;\"><title>Database</title><path d=\"M448 80v48c0 44.2-100.3 80-224 80S0 172.2 0 128V80C0 35.8 100.3 0 224 0S448 35.8 448 80zM393.2 214.7c20.8-7.4 39.9-16.9 54.8-28.6V288c0 44.2-100.3 80-224 80S0 332.2 0 288V186.1c14.9 11.8 34 21.2 54.8 28.6C99.7 230.7 159.5 240 224 240s124.3-9.3 169.2-25.3zM0 346.1c14.9 11.8 34 21.2 54.8 28.6C99.7 390.7 159.5 400 224 400s124.3-9.3 169.2-25.3c20.8-7.4 39.9-16.9 54.8-28.6V432c0 44.2-100.3 80-224 80S0 476.2 0 432V346.1z\"/></svg>`{=html} [SQL]{.sql}'s syntax itself.\n\n### Glossary\n\nAs the heading would suggest, I'm housing various term definitions here. As of now, it makes most sense to me to provide the definition for a concept and then give the term in [{{< fa brands python >}} Python]{.py} & [{{< fa brands r-project >}} R]{.r}. Note that I also give a more functional definition of major concepts in the code tutorial pages upon first mention.\n\n## Contributing Guidelines\n\n\n\n\n---\nengine: knitr\n---\n\n\n\n### Contributing Overview\n\nA comprehensive and accessible coding bilingualism website like this one is a huge undertaking and I'd welcome collaborators who share my vision for the value of a resource like this. I'm a competent [{{< fa brands r-project >}} R]{.r} coder but that definitely does not mean I am 100% correct all the time nor that I always write explanations in the clearest way possible. On the [{{< fa brands python >}} Python]{.py} front, my first real foray into that coding language is taking tutorials and making this website.\n\nSo, if you'd like to collaborate with me on this I have drafted the following guidelines. I'm happy to discuss/modify these with prospective collaborators so please don't let them dissuade you from reaching out!\n\n### Bug / Issue Reporting\n\nIf you see something wrong--either in a code chunk or in the plain text--I'd really appreciate it if you flagged it for my attention. You can do this by opening a {{< fa brands github >}} [GitHub Issue](https://github.com/njlyon0/collab_bilingualism/issues) on this project's repository. Please include the link to the page with the problem and as much detail as possible so I can easily find the problem area and make any needed repairs.\n\nIf you identify a bug in this manner I'll add your name (and the link to the professional website of your choosing) to the list below!\n\n#### Bug Finders {{< fa bugs >}}\n\n- Timothy Divoll -- {{< fa brands github >}} [GitHub profile](https://github.com/tdivoll)\n\n### Co-Development\n\nIf you'd like to actively collaborate with me on developing and refining this website that would be awesome! Please either reach out to me directly ([see my website](https://njlyon0.github.io/) for my contact info) or open a {{< fa brands github >}} [GitHub Issue](https://github.com/njlyon0/collab_bilingualism/issues) to get that conversation started.\n\nI'm envisioning that each new collaborator would (1) [fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) the website's GitHub repository, (2) make any edits that they had in mind, and (3) then [submit a pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests) to get those changes integrated into the primary website. I feel this minimizes the risk that changes have unintentional consequences for the website rendering as whole. I'm absolutely open to a [branch](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches)-based alternative if that makes more sense and I anticipate refining the logistical elements of contributing once the development team grows somewhat.\n\n### Contribution Credit\n\nIf you are interested/willing to join me in refining this website, I believe that is absolutely worthy of formal credit. You'll notice that the top right of the navbar has a \"Creators\" dropdown menu. If you contribute substantively (e.g., demonstrating new tools, adding a new page, etc.) we can add your name to the dropdown and link it to the professional website of your choosing.\n\nIf you have other modes of properly acknowledging your contribution(s) in mind I am absolutely open to discussing those ideas!\n\n\n\n## Additional Resources\n\nIf this is of interest, consider checking out these useful coding language-specific tutorials and other attempts at [{{< fa brands r-project >}} R]{.r}/[{{< fa brands python >}} Python]{.py} bilingualism. See below:\n\n### Bilingualism Resources\n\n- The [EEOB-BioData](https://github.com/EEOB-BioData) faculty at [Iowa State University](https://www.iastate.edu/) offer a [\"Computational Skills For Biological Data\"](https://eeob-biodata.github.io/EEOB-BCB-546X/) course that covers R and Python (and Unix)\n- [ESIIL](https://esiil.org/) (<u>E</u>nvironmental Data <u>S</u>cience <u>I</u>nnovation and <u>I</u>nclusion <u>L</u>ab) has created [an R-Python bilingualism tutorial](https://cu-esiil.github.io/pre-innovation-summit-training/2_R_and_Py_bilingualism/code/outline/outline/) that is framed for a more applied audience\n- [Marie Rivers](https://github.com/marierivers) also made [a website](https://marierivers.github.io/marie_quarto/) for exploring Quarto more generally that I've found super helpful for the part of it that deals with R/Python bilingualism\n- [Rebecca Barter](https://rebeccabarter.com/) made a nice blog post titled \"[An Introduction to Python for R Users](https://rebeccabarter.com/blog/2023-09-11-from_r_to_python?utm_source=substack&utm_medium=email)\" that focuses on comparing [{{< fa brands python >}} Python]{.py} operations to the _logic_ of [{{< fa brands r-project >}} R]{.r} (rather than side-by-side comparison)\n\n### [{{< fa brands python >}} Python]{.py} Resources\n\n- The Carpentries has a \"[Data Analysis and Visualization in Python for Ecologists ](https://datacarpentry.org/python-ecology-lesson/index.html)\" lesson that is really well put-together (as is characteristic of The Carpentries' content)\n- The [Earth Lab](https://www.earthdatascience.org/) has a Python course that was recommended to me by an NCEAS employee (specifically [section 4](https://www.earthdatascience.org/courses/intro-to-earth-data-science/python-code-fundamentals/))\n- Dr. Diba Mirza taught a UCSB Computer Science ([CS8](https://ucsb-cs8.github.io/w19-mirza/lectures_list/)) course on Python\n- There's a nice [30 Days of Python](https://github.com/Asabeneh/30-Days-Of-Python) challenge on GitHub you can work through at your own pace that covers a breadth of Python skills\n\n### [{{< fa brands r-project >}} R]{.r} Resources\n\n- [R for Data Science](https://r4ds.hadley.nz/) is a free online book that does a really nice job covering a lot of powerful R topics\n- The Carpentries also has a \"[Data Analysis and Visualization in Rfor Ecologists](https://datacarpentry.org/R-ecology-lesson/)\" that is very well done\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}